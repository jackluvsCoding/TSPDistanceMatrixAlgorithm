package matrix;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import locations.Location;

public class BuildMatrix {

	private ArrayList<Location> locations;
	private File matrixFile;

	/**
	 * Essentially this function acts as the driver for this class.
	 *
	 * @throws FileNotFoundException
	 * @throws IOException
	 * @throws ParseException
	 */
	public void buildMatrix() throws FileNotFoundException, IOException, ParseException {
		locations = getLocations();
		makeFile("matrix");
		drawMatrix(locations);

	}

	/**
	 *
	 * @return
	 * @throws FileNotFoundException
	 * @throws IOException
	 * @throws ParseException
	 */
	private ArrayList<Location> getLocations() throws FileNotFoundException, IOException, ParseException {
		locations = new ArrayList<Location>();

		JSONArray jsonObject = (JSONArray) new JSONParser().parse(new FileReader("./Locations.json"));

		for (int i = 0; i < jsonObject.size(); i++) {
			JSONObject json_object = (JSONObject) jsonObject.get(i);
			String name = (String) json_object.get("name");
			String shortDescription = (String) json_object.get("shortDescription");
			String address = (String) json_object.get("address");
			String coordinate = (String) json_object.get("coordinate");
			Location location = new Location(name, shortDescription, address, coordinate);
			locations.add(location);
		}
		System.out.println(locations.toString());
		return locations;
	}

	/**
	 * Writes the file using locations
	 *
	 * @param locations
	 * @throws IOException
	 */
	private void drawMatrix(ArrayList<Location> locations) throws IOException {
		System.out.println("File Size: " + matrixFile.length());
		Collections.sort(locations);
		BufferedWriter writer = new BufferedWriter(new FileWriter(matrixFile));

		// Write the first line
		writer.append(" - ");
		for (int i = 0; i < locations.size(); i++) {
			writer.append(locations.get(i).getShortDescription());
			if (i != locations.size() - 1) {
				writer.append("  ");
			} else {
				writer.newLine();
			}
		}

		// Write the following lines
		for (int column = 0; column < locations.size(); column++) {
			writer.append(locations.get(column).getShortDescription() + "\t");

			for (int row = 0; row < locations.size(); row++) {

			}
			writer.newLine();
		}

		// Close writer and exit
		writer.close();
		System.out.println("File Size: " + matrixFile.length());
	}

	/**
	 * 
	 * @param fileName
	 */
	private void makeFile(String fileName) {
		try {
			matrixFile = new File("./" + fileName);
			matrixFile.createNewFile();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
